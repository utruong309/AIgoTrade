# Generated by Django 5.2.5 on 2025-08-23 20:09

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('phone_number', models.CharField(blank=True, max_length=20, null=True)),
                ('date_of_birth', models.DateField(blank=True, null=True)),
                ('is_verified', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('risk_tolerance', models.CharField(choices=[('conservative', 'Conservative'), ('moderate', 'Moderate'), ('aggressive', 'Aggressive')], default='moderate', max_length=20)),
                ('investment_experience', models.CharField(choices=[('beginner', 'Beginner'), ('intermediate', 'Intermediate'), ('advanced', 'Advanced')], default='beginner', max_length=20)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'db_table': 'trading_users',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='NewsArticle',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('symbol', models.CharField(db_index=True, max_length=10)),
                ('title', models.TextField()),
                ('description', models.TextField(blank=True, null=True)),
                ('url', models.URLField()),
                ('source', models.CharField(max_length=100)),
                ('published_at', models.DateTimeField()),
                ('cached_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['-published_at'],
                'indexes': [models.Index(fields=['symbol', 'cached_at'], name='trading_new_symbol_5ac736_idx'), models.Index(fields=['published_at'], name='trading_new_publish_ea23ba_idx'), models.Index(fields=['symbol'], name='trading_new_symbol_cf7baa_idx'), models.Index(fields=['source'], name='trading_new_source_2a8af0_idx'), models.Index(fields=['symbol', 'published_at'], name='trading_new_symbol_c6eefd_idx')],
                'unique_together': {('symbol', 'url')},
            },
        ),
        migrations.CreateModel(
            name='Portfolio',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True)),
                ('total_value', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('cash_balance', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('invested_amount', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('total_return', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('total_return_percent', models.DecimalField(decimal_places=4, default=0, max_digits=8)),
                ('is_default', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='portfolios', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'trading_portfolios',
                'ordering': ['-is_default', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Stock',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('symbol', models.CharField(db_index=True, max_length=10, unique=True)),
                ('name', models.CharField(max_length=100)),
                ('exchange', models.CharField(max_length=20)),
                ('sector', models.CharField(blank=True, max_length=50, null=True)),
                ('industry', models.CharField(blank=True, max_length=100, null=True)),
                ('market_cap', models.BigIntegerField(blank=True, null=True)),
                ('current_price', models.DecimalField(decimal_places=4, default=0, max_digits=15)),
                ('previous_close', models.DecimalField(decimal_places=4, default=0, max_digits=15)),
                ('day_change', models.DecimalField(decimal_places=4, default=0, max_digits=15)),
                ('day_change_percent', models.DecimalField(decimal_places=4, default=0, max_digits=8)),
                ('volume', models.BigIntegerField(default=0)),
                ('avg_volume', models.BigIntegerField(default=0)),
                ('pe_ratio', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('dividend_yield', models.DecimalField(blank=True, decimal_places=4, max_digits=8, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('last_price_update', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'trading_stocks',
                'ordering': ['symbol'],
                'indexes': [models.Index(fields=['symbol'], name='trading_sto_symbol_428c14_idx'), models.Index(fields=['exchange'], name='trading_sto_exchang_42f3ff_idx'), models.Index(fields=['sector'], name='trading_sto_sector_a252f6_idx'), models.Index(fields=['is_active'], name='trading_sto_is_acti_8e4c0a_idx'), models.Index(fields=['current_price'], name='trading_sto_current_57d1fd_idx'), models.Index(fields=['market_cap'], name='trading_sto_market__f1ee03_idx'), models.Index(fields=['last_price_update'], name='trading_sto_last_pr_a9cf71_idx')],
            },
        ),
        migrations.CreateModel(
            name='MarketData',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('open_price', models.DecimalField(decimal_places=4, max_digits=15)),
                ('high_price', models.DecimalField(decimal_places=4, max_digits=15)),
                ('low_price', models.DecimalField(decimal_places=4, max_digits=15)),
                ('close_price', models.DecimalField(decimal_places=4, max_digits=15)),
                ('volume', models.BigIntegerField()),
                ('adjusted_close', models.DecimalField(blank=True, decimal_places=4, max_digits=15, null=True)),
                ('date', models.DateField()),
                ('time_period', models.CharField(choices=[('1min', '1 Minute'), ('5min', '5 Minutes'), ('15min', '15 Minutes'), ('30min', '30 Minutes'), ('1hour', '1 Hour'), ('1day', '1 Day'), ('1week', '1 Week'), ('1month', '1 Month')], default='1day', max_length=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('stock', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='market_data', to='trading.stock')),
            ],
            options={
                'db_table': 'trading_market_data',
                'ordering': ['-date', '-time_period'],
            },
        ),
        migrations.CreateModel(
            name='Holding',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('quantity', models.DecimalField(decimal_places=6, default=0, max_digits=15)),
                ('average_cost', models.DecimalField(decimal_places=4, default=0, max_digits=15)),
                ('total_cost', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('current_value', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('unrealized_gain_loss', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('unrealized_gain_loss_percent', models.DecimalField(decimal_places=4, default=0, max_digits=8)),
                ('first_purchase_date', models.DateTimeField()),
                ('last_transaction_date', models.DateTimeField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('portfolio', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='holdings', to='trading.portfolio')),
                ('stock', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='holdings', to='trading.stock')),
            ],
            options={
                'db_table': 'trading_holdings',
                'ordering': ['-current_value'],
            },
        ),
        migrations.CreateModel(
            name='Transaction',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('transaction_type', models.CharField(choices=[('buy', 'Buy'), ('sell', 'Sell'), ('dividend', 'Dividend'), ('deposit', 'Cash Deposit'), ('withdrawal', 'Cash Withdrawal'), ('fee', 'Fee')], max_length=20)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('executed', 'Executed'), ('cancelled', 'Cancelled'), ('failed', 'Failed')], default='pending', max_length=20)),
                ('quantity', models.DecimalField(decimal_places=6, default=0, max_digits=15)),
                ('price', models.DecimalField(decimal_places=4, default=0, max_digits=15)),
                ('total_amount', models.DecimalField(decimal_places=2, max_digits=15)),
                ('fees', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('transaction_date', models.DateTimeField()),
                ('notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('portfolio', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='transactions', to='trading.portfolio')),
                ('stock', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='transactions', to='trading.stock')),
            ],
            options={
                'db_table': 'trading_transactions',
                'ordering': ['-transaction_date'],
            },
        ),
        migrations.AddIndex(
            model_name='user',
            index=models.Index(fields=['email'], name='trading_use_email_929c79_idx'),
        ),
        migrations.AddIndex(
            model_name='user',
            index=models.Index(fields=['username'], name='trading_use_usernam_ef7e90_idx'),
        ),
        migrations.AddIndex(
            model_name='user',
            index=models.Index(fields=['created_at'], name='trading_use_created_812dc2_idx'),
        ),
        migrations.AddIndex(
            model_name='user',
            index=models.Index(fields=['is_verified'], name='trading_use_is_veri_5de77a_idx'),
        ),
        migrations.AddIndex(
            model_name='portfolio',
            index=models.Index(fields=['user'], name='trading_por_user_id_3d489e_idx'),
        ),
        migrations.AddIndex(
            model_name='portfolio',
            index=models.Index(fields=['user', 'is_default'], name='trading_por_user_id_d18b69_idx'),
        ),
        migrations.AddIndex(
            model_name='portfolio',
            index=models.Index(fields=['is_active'], name='trading_por_is_acti_0fe898_idx'),
        ),
        migrations.AddIndex(
            model_name='portfolio',
            index=models.Index(fields=['total_value'], name='trading_por_total_v_5489a6_idx'),
        ),
        migrations.AddIndex(
            model_name='portfolio',
            index=models.Index(fields=['created_at'], name='trading_por_created_e103a9_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='portfolio',
            unique_together={('user', 'name')},
        ),
        migrations.AddIndex(
            model_name='marketdata',
            index=models.Index(fields=['stock', 'date'], name='trading_mar_stock_i_642423_idx'),
        ),
        migrations.AddIndex(
            model_name='marketdata',
            index=models.Index(fields=['stock', 'time_period'], name='trading_mar_stock_i_0c1436_idx'),
        ),
        migrations.AddIndex(
            model_name='marketdata',
            index=models.Index(fields=['date'], name='trading_mar_date_c3afe1_idx'),
        ),
        migrations.AddIndex(
            model_name='marketdata',
            index=models.Index(fields=['stock', 'date', 'time_period'], name='trading_mar_stock_i_1c596b_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='marketdata',
            unique_together={('stock', 'date', 'time_period')},
        ),
        migrations.AddIndex(
            model_name='holding',
            index=models.Index(fields=['portfolio'], name='trading_hol_portfol_a57cde_idx'),
        ),
        migrations.AddIndex(
            model_name='holding',
            index=models.Index(fields=['stock'], name='trading_hol_stock_i_4a555e_idx'),
        ),
        migrations.AddIndex(
            model_name='holding',
            index=models.Index(fields=['portfolio', 'stock'], name='trading_hol_portfol_c03506_idx'),
        ),
        migrations.AddIndex(
            model_name='holding',
            index=models.Index(fields=['current_value'], name='trading_hol_current_d42515_idx'),
        ),
        migrations.AddIndex(
            model_name='holding',
            index=models.Index(fields=['unrealized_gain_loss'], name='trading_hol_unreali_4dc855_idx'),
        ),
        migrations.AddIndex(
            model_name='holding',
            index=models.Index(fields=['last_transaction_date'], name='trading_hol_last_tr_732dc0_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='holding',
            unique_together={('portfolio', 'stock')},
        ),
        migrations.AddIndex(
            model_name='transaction',
            index=models.Index(fields=['portfolio'], name='trading_tra_portfol_cfddb0_idx'),
        ),
        migrations.AddIndex(
            model_name='transaction',
            index=models.Index(fields=['stock'], name='trading_tra_stock_i_174ac5_idx'),
        ),
        migrations.AddIndex(
            model_name='transaction',
            index=models.Index(fields=['portfolio', 'stock'], name='trading_tra_portfol_8bfad7_idx'),
        ),
        migrations.AddIndex(
            model_name='transaction',
            index=models.Index(fields=['transaction_type'], name='trading_tra_transac_d8da71_idx'),
        ),
        migrations.AddIndex(
            model_name='transaction',
            index=models.Index(fields=['status'], name='trading_tra_status_f3cf9b_idx'),
        ),
        migrations.AddIndex(
            model_name='transaction',
            index=models.Index(fields=['transaction_date'], name='trading_tra_transac_0766ff_idx'),
        ),
        migrations.AddIndex(
            model_name='transaction',
            index=models.Index(fields=['portfolio', 'transaction_date'], name='trading_tra_portfol_afefdd_idx'),
        ),
        migrations.AddIndex(
            model_name='transaction',
            index=models.Index(fields=['stock', 'transaction_date'], name='trading_tra_stock_i_11e5c3_idx'),
        ),
    ]
